#!/bin/sh

# kernel_raspi.SlackBuild
# Kernel and modules for Raspberry Pi
# (Note that this SlackBuild will also run kernel-modules-raspi.SlackBuild)
#
# Copyright 2012 David Spencer, Baildon, West Yorkshire, U.K.
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#------------------------------------------------------------------------------
#
# Before you run this SlackBuild you must clone the Raspberry Pi 'linux' git
# repository into a subdirectory named linux:
#
#   git clone git://github.com/raspberrypi/linux.git
#
#------------------------------------------------------------------------------

FLAVOUR=raspi
PRGNAM=kernel_$FLAVOUR

# If not set in the environment, MYVER will be calculated later from git rev
MYVER=${VERSION:-}
BUILD=${BUILD:-1}
TAG=${TAG:-}

KNLARCH=${ARCH:-arm}
unset ARCH

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

set -e

rm -rf $PKG
mkdir -p $PKG

cd $CWD/linux
make mrproper

if [ -d $CWD/patches/ ]; then
  git checkout -f
  for pf in $CWD/patches/*; do
    patch --verbose -p1 <$pf
  done
fi

# Package names & versions conform with Slackware/ARMedslack as follows:
#   kernel_FFFF has an underscore, but kernel-modules-FFFF has dashes
#   kernel_FFFF version is e.g. 3.1.9_g6789abc
#   kernel-modules-FFFF version is e.g. 3.1.9_FFFF_g6789abc
# (we can drop the _g6789abc when upstream stabilises)

cat $CWD/config-$FLAVOUR > .config

MYVER=${MYVER:-g$(git log --format='%h' -n 1)}

make silentoldconfig LOCALVERSION="-$FLAVOUR-$MYVER"

head -4 Makefile | sed 's/ *= */=/' > $TMP/versionvars
. $TMP/versionvars
rm $TMP/versionvars
KNLVER="${VERSION}.${PATCHLEVEL}.${SUBLEVEL}${EXTRAVERSION}-${FLAVOUR}-${MYVER}"
PKGVER=$(echo "$KNLVER" | tr - _)

make Image $NUMJOBS LOCALVERSION="-$FLAVOUR-$MYVER"

mkdir -p $PKG/boot
# It's no longer necessary to wrap the Image, but apparently zImage isn't reliable.
cp arch/arm/boot/Image $PKG/boot/kernel.img
cp System.map $PKG/boot/System.map

# Put this in /usr/doc to avoid confusion with Pi-specific /boot/config.txt
mkdir -p $PKG/usr/doc/$PRGNAM-$PKGVER
cat .config > $PKG/usr/doc/$PRGNAM-$PKGVER/config

# Create /boot/cmdline.txt copied from kernel config
# Install as .new even though it's not in /etc
# Root device will be filled in by doinst.sh
grep 'CONFIG_CMDLINE=' .config | \
  sed -e 's/CONFIG_CMDLINE="//' -e 's/"$//' -e 's:/root=/dev/mmcblk0p[0-7]:root=@ROOTDEV@:' \
  > $PKG/boot/cmdline.txt.new

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Add version stamp into /boot
echo "$PRGNAM-$PKGVER-$KNLARCH-$BUILD$TAG $(date -u '+%F %T')" \
  > $PKG/boot/version-$PRGNAM.txt

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$PKGVER-$KNLARCH-$BUILD$TAG.${PKGTYPE:-tgz}

#------------------------------------------------------------------------------

# Prepare and install the modules.  The kernel-modules SlackBuild traditionally
# just picks them up from the running system.
cd $CWD/linux
make modules $NUMJOBS LOCALVERSION="-$FLAVOUR-$MYVER"
make modules_install

# Lie about where the source is ;-)
cd /lib/modules/$KNLVER
rm build;  ln -s /usr/src/linux build
rm source; ln -s /usr/src/linux source

# Call kernel-modules-raspi.SlackBuild from here, so that we can tell it the
# version.
cd $CWD/../kernel-modules-raspi
ARCH=$KNLARCH VERSION=$KNLVER \
BUILD=$BUILD TAG=$TAG \
TMP=$TMP OUTPUT=$OUTPUT \
  sh kernel-modules-raspi.SlackBuild
